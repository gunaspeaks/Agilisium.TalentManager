@model Agilisium.TalentManager.Web.Models.EmployeeModel

@{
    ViewBag.Title = "Create New Employee";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/Scripts/jquery-3.3.1.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        loadSubPracticeDropDown();
    })

    $(function () {
        $("#PracticeID").change(function (evt) {
            loadSubPracticeDropDown();
        });
    });

    $(function () {
        $("#EmploymentTypeID").change(function (event) {
            if ($("#EmploymentTypeID").text() != "Please Select") {
                $.ajax({
                    url: "/Employee/GenerateNewEmployeeID",
                    type: "POST",
                    data: { id: $("#EmploymentTypeID").val() },
                    success: function (data) {
                        $("#EmployeeID").val(data);
                        $("#empID").val(data);
                        $("#EmployeeID").prop("disabled", true);
                    },
                    error: function (eid) { alert("Error while generating new Employee ID"); }
                });
            }
        });
    });

    function loadSubPracticeDropDown() {
        if ($("#PracticeID").text() != "Please Select") {

            $.ajax({
                url: "/Employee/GetSubPracticeList",
                type: 'POST',
                data: { id: $("#PracticeID").val() },
                success: function (data) {
                    $('#SubPracticeID').empty();
                    $.each(data, function () {
                        $("#SubPracticeID").append($("<option></option>").val(parseInt(this['Value'])).text(this['Text']));
                    });
                    ddlSubPractice.prop('disabled', false);
                },
                error: function (xhr) { alert('Error while loading the Sub Practice list'); }
            });
        }
    }
</script>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>Create New Employee</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="panel-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div>
                <table style="width:80%;">
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmploymentTypeID)
                                @Html.DropDownListFor(model => model.EmploymentTypeID, (IEnumerable<SelectListItem>)ViewBag.EmploymentTypeListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.HiddenFor(model => model.EmployeeID, new { id = "empID" })
                                @Html.LabelFor(model => model.EmployeeID)
                                @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ReportingManagerID)
                                @Html.DropDownListFor(model => model.ReportingManagerID, (IEnumerable<SelectListItem>)ViewBag.ReportingManagerListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName)
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName)
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessUnitID)
                                @Html.DropDownListFor(model => model.BusinessUnitID, (IEnumerable<SelectListItem>)ViewBag.BuListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.UtilizationTypeID)
                                @Html.DropDownListFor(model => model.UtilizationTypeID, (IEnumerable<SelectListItem>)ViewBag.UtilizationTypeListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PracticeID)
                                @Html.DropDownListFor(model => model.PracticeID, (IEnumerable<SelectListItem>)ViewBag.PracticeListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SubPracticeID)
                                @Html.DropDownListFor(model => model.SubPracticeID, (IEnumerable<SelectListItem>)ViewBag.SubPracticeListItems, null, new { @class = "form-control" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfJoin)
                                @Html.EditorFor(model => model.DateOfJoin, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastWorkingDay)
                                @Html.EditorFor(model => model.LastWorkingDay, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PrimarySkills)
                                @Html.EditorFor(model => model.PrimarySkills, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SecondarySkills)
                                @Html.EditorFor(model => model.SecondarySkills, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td></td>
                    </tr>
                </table>
            </div>
            <div class="panel-footer">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel and Go Back", "List", null, new { @class = "btn btn-default" })
            </div>

        </div>
    }
</div>
